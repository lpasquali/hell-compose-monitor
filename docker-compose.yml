version: '3.9'

x-healthcheck: &default-healthcheck
  test: [ "CMD", "echo", "true"]
  interval: 10s
  timeout: 60s
  retries: 5
  start_period: 20s

volumes:
  prometheus_data: &volume_defaults
    driver: default
  grafana_data: *volume_defaults
  alertmanager_data: *volume_defaults
  loki_wal: *volume_defaults

networks:
  front-tier:
  back-tier:

services:

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.42.0
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus:rw
    environment:
      - EXTERNAL_URL=${EXTERNAL_URL}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=366d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - "--web.external-url=${EXTERNAL_URL}"
    ports:
      - protocol: tcp
        published: 9090
        target: 9090
    links:
      - alertmanager:alertmanager
      - pushgateway:pushgateway
      - pve-exporter:pve-exporter
      - mktxp:mktxp
      - promtail:promtail
      - loki:loki
    depends_on:
      pushgateway: &healthy_service
        condition: service_healthy
      alertmanager: *healthy_service
      pve-exporter: *healthy_service
      mktxp: *healthy_service
      promtail: *healthy_service
      loki: *healthy_service
      syslog-ng: *healthy_service
    networks:
      - back-tier
    healthcheck: 
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://prometheus:9090/-/healthy | grep Healthy"]
    restart: always

  alertmanager-init:
    container_name: alertinit
    image: dinutac/jinja2docker:2.1.6
    hostname: jinja2docker
    entrypoint: ""
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_POOPTOOTH_TOKEN}
      - TELEGRAM_BOT_NAME=${TELEGRAM_POOPTOOTH_CHAT_ID}
    volumes:
      - ./alertmanager/templates:/templates:ro
      - ./alertmanager/config:/output:rw
    command: "jinja2 /templates/config.yml.j2 --format=yaml -o /output/config.yml"

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.25.0
    ports:
      - protocol: tcp
        published: 9093
        target: 9093
    volumes:
      - ./alertmanager/config:/etc/alertmanager/config:ro
      - ./alertmanager/alert-templates:/etc/alertmanager/templates:ro
      - alertmanager_data:/alertmanager:rw
    networks:
      - back-tier
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config/config.yml'
      - '--storage.path=/alertmanager'
    depends_on:
      alertmanager-init:
        condition: service_completed_successfully
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://alertmanager:9093/api/v2/status | grep ready"]

  grafana:
    container_name: grafana
    image: grafana/grafana:9.3.6
    user: "472"
    depends_on:
      prometheus: *healthy_service
    ports:
      - protocol: tcp
        published: 3000
        target: 3000
    volumes:
      - grafana_data:/var/lib/grafana:rw
      - ./grafana/provisioning:/etc/grafana/provisioning:rw
    env_file:
      - ./grafana/config.monitoring
    networks:
      - back-tier
      - front-tier
    restart: always
    links:
      - loki:loki
      - alertmanager:alertmanager
      - prometheus:prometheus
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://grafana:3000/api/health | grep ok"]

  pushgateway:
    container_name: pushgateway
    image: prom/pushgateway:v1.5.1
    restart: always
    # ports:
    #   - protocol: tcp
    #     published: 9091
    #     target: 9091
    networks:
      - back-tier
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://pushgateway:9091/-/ready | grep OK"]

  pve-exporter:
    container_name: pve-exporter
    image: prompve/prometheus-pve-exporter:2.2.4
    restart: always
    env_file:
      - .env
    # ports:
    #   - protocol: tcp
    #     published: 9221
    #     target: 9221
    networks:
      - back-tier
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://pve-exporter:9221/ | grep target"]

  mktxp:
    container_name: mktxp
    image: guenterbailey/mktxp:latest
    user: root
    volumes:
      - './mktxp:/root/mktxp'
    networks:
      - back-tier
    restart: unless-stopped
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "mktxp", "show"]

  promtail:
    command: -config.file=/etc/promtail/promtail-config.yml
    container_name: promtail
    image: grafana/promtail:2.7.3
    networks:
      - back-tier
    links:
      - loki:loki
      - syslog-ng:syslog-ng
    # ports:
    #   - protocol: tcp
    #     published: 1514
    #     target: 1514
    #   - protocol: tcp
    #     published: 9080
    #     target: 9080
    restart: always
    volumes:
      - ./promtail:/etc/promtail:ro
    healthcheck:
      <<: *default-healthcheck

  syslog-ng:
    command: -edv
    container_name: syslog-ng
    image: balabit/syslog-ng:4.0.1
    networks:
      - back-tier
    ports:
      - protocol: udp
        published: 514
        target: 514
      - protocol: tcp
        published: 601
        target: 601
    restart: always
    volumes:
      - ./syslog-ng:/etc/syslog-ng:rw
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD", "/usr/sbin/syslog-ng-ctl", "stats"]

  loki:
    user: root
    command: -config.file=/etc/loki/loki-config.yml
    container_name: loki
    image: grafana/loki:2.7.3
    networks:
      - back-tier     
    # ports:
    #   - protocol: tcp
    #     published: 3100
    #     target: 3100
    restart: always
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yml:ro
      - loki_wal:/wal:rw
    healthcheck:
      <<: *default-healthcheck
      test: ["CMD-SHELL", "wget -t1 -q -O - http://loki:3100/ready | grep ready"]
